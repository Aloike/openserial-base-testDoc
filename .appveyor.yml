#
##  @project openserial (https://openserialproject.github.io)
##  @file   .appveyor.yml
##  @brief  Appveyor configuration file.
##
##  This file contains configuration for the "Appveyor" continuous integration
## tool.
##
##  @see    https://www.appveyor.com/docs/appveyor-yml/
#
# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.


#---------------------------------#
#      general configuration      #
#---------------------------------#

# version format
version: '{branch}-build_{build}'




#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
#image: Visual Studio 2015 managed with matrix



#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
#platform:
#  - x86
#  - x64
#  - Any CPU

# build Configuration, i.e. Debug, Release, etc.
configuration:
  - Release

build:
  parallel: true                  # enable MSBuild parallel builds

  # MSBuild verbosity level (quiet|minimal|normal|detailed)
  verbosity: detailed

environment:
  matrix:
    # MinGW32
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
      arch:            win32
      bitsize:         x86
      build_platform:  Win32
      qt:              5.8\mingw53_32
      suffix:          mingw53_32
      generator:       "MinGW 5.3 32Bit"

# FIXME:     # MSVC x86
# FIXME:     - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
# FIXME:       arch:            win32
# FIXME:       bitsize:         x86
# FIXME:       build_platform:  Win32
# FIXME:       qt:              5.8\msvc2015
# FIXME:       suffix:          msvc2015
# FIXME:       generator:       "Visual Studio 2015"
# FIXME:
# FIXME:     # MSVC amd64
# FIXME:     - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
# FIXME:       arch:            win32
# FIXME:       bitsize:         x86_64
# FIXME:       build_platform:  x64
# FIXME:       qt:              5.8\msvc2015_64
# FIXME:       suffix:          msvc2015
# FIXME:       generator:       "Visual Studio 2015 x64"


# scripts to run before build
before_build:
  - echo Building for %build_platform% with %generator%
  - IF EXIST "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" echo "SetEnv.cmd detected"
  - IF EXIST "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" echo "vcvarsall.bat detected"
  - if %build_platform%==mingw set PATH=C:\Qt\Tools\mingw53_32\bin;%PATH%
  - set BUILDTARGET="/p:Configuration=Release,Platform=%build_platform%"
#  - if %build_platform%==Win32     set BUILDTARGET="/p:Configuration=Release,Platform=%build_platform%"
#  - if %build_platform%==x64  set BUILDTARGET="/p:Configuration=Release,Platform=%build_platform%"
  - set BUILDTYPE=/t:Build
  - set SOLUTIONFILE="%APPVEYOR_BUILD_FOLDER%\openserial.sln"

# scripts to run *after* solution is built and *before* automatic packaging
# occurs (web apps, NuGet packages, Azure Cloud Services)
before_package:

# scripts to run after build
after_build:


install:
  - echo "Step : install"
  - echo "+-- Build Platform is %build_platform%"
  - set UseEnv=true
  - if %build_platform%=="Win32" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86
  - if %build_platform%=="x64" call "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64
  - if %build_platform%=="x64" call "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" x86_amd64
  - set QTDIR=C:\Qt\%qt%
  - set PATH=%PATH%;%QTDIR%;%QTDIR%\bin;C:\MinGW\bin
  - git --version


# to run your custom scripts instead of automatic MSBuild
build_script:
  - if %suffix%==mingw53_32 qmake CONFIG+=APPVEYOR
  - if %suffix%==msvc2015 qmake -tp vc -r "%APPVEYOR_BUILD_FOLDER%\openserial.pro" CONFIG+=APPVEYOR
#  - dir src
#  - if %suffix%==mingw53_32 type Makefile*
  - if %suffix%==mingw53_32 mingw32-make --debug=v
  - if %suffix%==msvc2015 call msbuild %SOLUTIONFILE% %BUILDTYPE% %BUILDTARGET%


#---------------------------------#
#        global handlers          #
#---------------------------------#

# on successful build
on_success:


# on build failure
on_failure:
  - IF EXIST "Makefile*" type "Makefile*"
  - IF EXIST "src\Makefile*" type "src\Makefile*"
  - IF EXIST "src\Version.*" type src\Version.*
  - IF EXIST "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" type "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd"
  - IF EXIST "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat" type "C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC\vcvarsall.bat"
  - IF EXIST "C:\Program Files (x86)\MSBuild\14.0" echo "vs2015 img detected"
  - IF EXIST "C:\Program Files (x86)\MSBuild\14.0\Bin" dir "C:\Program Files (x86)\MSBuild\14.0\Bin"
  - cd C:

# after build failure or success
# on_finish:
#   - type src\Version.*

